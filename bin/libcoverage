#!/usr/bin/env php
<?php
use DuckPhp\Component\Console;

foreach ([__DIR__ . '/../../../autoload.php', __DIR__ . '/../vendor/autoload.php'] as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}
if(!class_exists(Console::class)){
    //current md5 = 2cf2ac609f516ca99e779bd039abfec2
    require __DIR__.'/Console.php';
}
class Command 
{
    /**
     *  this help 
     */
    public function command_help()
    {
        echo "LibCoverage v" .LibCoverage\LibCoverage::VERSION;
        echo "\nUsage: \n";
        echo Console::G()->getCommandListInfo();
    }
    /**
     * fetch report
     */
    public function command_report()
    {
        if (class_exists(\SebastianBergmann\CodeCoverage\CodeCoverage::class)) {
            echo 'Need import CodeCoverage package';
            echo "\n";
            return;
        }
        $options = Console::G()->getCliParameters();        
        LibCoverage\LibCoverage::G()->init($options)->showAllReport();
    }
    /**
     * cloze the test files
     */
    public function command_cloze()
    {
        $options = Console::G()->getCliParameters();
        LibCoverage\LibCoverage::G()->init($options)->createTestFiles();
    }
    /**
     * setup.
     */
    public function command_setup()
    {
        $options = Console::G()->getCliParameters();
        LibCoverage\LibCoverage::G()->init($options)->createProject();
    }
}
//////////////
$options = [
    'cli_default_command_class'=>Command::class,
];
Console::G()->init($options)->run();
